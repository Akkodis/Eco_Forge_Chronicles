{
  "contracts": {
    "RandomNumberGenerator": {
      "address": "0xF9Ce2f32eEefEB8C78d8017411913ab9d24D9EE8",
      "abi": [
        "function generateRandomNumber(uint256) view returns (uint256)",
        "function generateRandomNumberInRange(uint256,uint256) view returns (uint256)"
      ],
      "info": "Protocol"
    },
    "AssetReservoir": {
      "address": "0xBb612e75214881a412a2709D6dcf6f8a2B360148",
      "abi": [
        "constructor()",
        "error InsufficientPoolBalance(address,uint256,uint256)",
        "error InvalidParameters()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error PoolAlreadyExists(uint256)",
        "error PoolDoesNotExist(uint256)",
        "error PoolInactive(uint256)",
        "error ReentrancyGuardReentrantCall()",
        "error TokenAlreadyExistsInPool(address)",
        "error TokenNotInPool(address)",
        "error TokenTransferFailed()",
        "error Unauthorized()",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event PoolCreated(uint256 indexed,address)",
        "event PoolDeactivated(uint256 indexed)",
        "event RewardsDispensed(uint256 indexed,address indexed,address indexed,uint256,address)",
        "event TokenRemovedFromPool(uint256 indexed,address indexed,address)",
        "event TokensAddedToPool(uint256 indexed,address[],uint256[])",
        "event TokensDeposited(uint256 indexed,address indexed,uint256,address)",
        "event TokensTransferredBetweenPools(uint256 indexed,uint256 indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function addTokensToPool(uint256,address[],uint256[])",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function createPool()",
        "function deactivatePool(uint256)",
        "function dispenseReward(uint256,address,address,uint256)",
        "function getAllPoolIds() view returns (uint256[])",
        "function getPoolInfo(uint256) view returns (bool,address[])",
        "function getTokenBalance(uint256,address) view returns (uint256)",
        "function getTokensInPool(uint256) view returns (address[])",
        "function nextPoolId() view returns (uint256)",
        "function onTransferReceived(address,address,uint256,bytes) returns (bytes4)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function poolIds(uint256) view returns (uint256)",
        "function pools(uint256) view returns (bool)",
        "function removeTokenFromPool(uint256,address,address)",
        "function renounceOwnership()",
        "function transferOwnership(address)",
        "function transferTokensBetweenPools(uint256,uint256,address,uint256)",
        "function updateCoordinatorCapability(address,uint8,bool)",
        "function withdrawTokens(address,uint256)"
      ],
      "info": "Protocol"
    },
    "SimpleIncentiveMechanism": {
      "address": "0x69F48Dfa055D370cd5E36428EB9aF5D9BBBF0128",
      "abi": [
        "constructor(address,address)",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event ChargeReceived(address indexed,uint256)",
        "event CoordinatorUpdated(address indexed,bool)",
        "event NFTChargeReceived(address indexed,uint256)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event RewardRedeemed(address indexed,uint256,address,uint256)",
        "function acceptOwnership()",
        "function assetReservoir() view returns (address)",
        "function authorizedCoordinators(address) view returns (bool)",
        "function chargeProbability() view returns (uint256)",
        "function charges(address,uint256) view returns (bool,uint256)",
        "function getAvailableCharges(address) view returns (uint256)",
        "function onRedeem(address,uint256)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function randomNumberGenerator() view returns (address)",
        "function redeemCharge(uint256)",
        "function renounceOwnership()",
        "function transferOwnership(address)",
        "function triggerIncentive(address,uint256)",
        "function updateAssetReservoir(address)",
        "function updateChargeProbability(uint256)",
        "function updateCoordinator(address,bool)",
        "function updateRandomNumberGenerator(address)"
      ],
      "info": "Protocol"
    },
    "Marketplace": {
      "address": "0x61F522DA1d1aeC316084156D87DF444581B72C1c",
      "abi": [
        "constructor()",
        "error AssetNotAllowed()",
        "error EnforcedPause()",
        "error ExpectedPause()",
        "error InsufficientKYCLevel()",
        "error InvalidAssetAddress()",
        "error InvalidParameters()",
        "error InvalidPaymentToken()",
        "error InvalidQuantity()",
        "error InvalidTokenType()",
        "error ListingNotActive()",
        "error NoBuyOrdersProvided()",
        "error NoListingIdsProvided()",
        "error NoListingsProvided()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error SellerCannotBuyOwnItem()",
        "error TokenNotAllowed()",
        "error TransferFailed()",
        "error TransferToBuyerFailed()",
        "error TransferToMarketplaceFailed()",
        "error TransferToSellerFailed()",
        "error Unauthorized()",
        "error ZeroAddressNotAllowed()",
        "error ZeroUnitPrice()",
        "event AssetStatusUpdated(address indexed,bool)",
        "event EarningsClaimed(address indexed,address indexed,uint256)",
        "event IncentiveMechanismUpdated(address indexed)",
        "event ItemListed(uint256 indexed,address indexed)",
        "event ItemSold(uint256 indexed,address indexed,uint256,uint256)",
        "event ItemsListed(uint256[],address indexed)",
        "event KYCVerificationUpdated(address indexed)",
        "event ListingCancelled(uint256 indexed,address indexed)",
        "event ListingsCancelled(uint256[],address indexed)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event Paused(address)",
        "event PaymentTokenStatusUpdated(address indexed,bool)",
        "event Unpaused(address)",
        "function acceptOwnership()",
        "function allowedAssets(address) view returns (bool)",
        "function buyItems((uint256,uint256)[])",
        "function cancelListings(uint256[])",
        "function claimEarnings(address[])",
        "function earnings(address,address) view returns (uint256)",
        "function getAllowedPaymentTokens() view returns (address[],bool[])",
        "function incentiveMechanism() view returns (address)",
        "function kycVerification() view returns (address)",
        "function listItems((address,address,uint256,uint256,uint256,address,uint8,bool)[])",
        "function listings(uint256) view returns (address,address,uint256,uint256,uint256,address,uint8,bool)",
        "function nextListingId() view returns (uint256)",
        "function owner() view returns (address)",
        "function pause()",
        "function paused() view returns (bool)",
        "function paymentTokenTriggersIncentive(address) view returns (bool)",
        "function pendingOwner() view returns (address)",
        "function renounceOwnership()",
        "function requiredKYCLevelByPaymentToken(address) view returns (uint8)",
        "function setAssetAllowed(address,bool)",
        "function setIncentiveMechanism(address)",
        "function setKYCVerification(address)",
        "function setPaymentTokenAllowed(address,bool,bool)",
        "function setRequiredKYCLevelForPaymentToken(address,uint8)",
        "function transferOwnership(address)",
        "function unpause()"
      ],
      "info": "Protocol"
    },
    "DevelopmentVault": {
      "address": "0xf54Cc0CB035c2a8EF8995911d2F8B0436b742e63",
      "abi": [
        "error ReentrancyGuardReentrantCall()",
        "error SafeERC20FailedOperation(address)",
        "event ERC20Claimed(address indexed,address indexed,uint256)",
        "event ERC20Received(address indexed,address indexed,uint256)",
        "event ERC721Claimed(address indexed,address indexed,uint256)",
        "event ERC721Received(address indexed,address indexed,uint256)",
        "function claimERC20SurpriseLoot(uint256)",
        "function claimERC721SurpriseLoot(uint256)",
        "function depositERC20(address,uint256)",
        "function erc20Balances(address) view returns (uint256)",
        "function erc20TokenAddresses(uint256) view returns (address)",
        "function erc721TokenAddresses(uint256) view returns (address)",
        "function erc721Tokens(address,uint256) view returns (uint256)",
        "function onERC721Received(address,address,uint256,bytes) returns (bytes4)",
        "function onTransferReceived(address,address,uint256,bytes) returns (bytes4)",
        "function registerERC20(address)"
      ],
      "info": "Vault"
    },
    "USDC": {
      "address": "0x06669b92dFeFa759820F97aAD2b2799eA3F359fB",
      "abi": [
        "constructor(string,string,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InvalidAddress()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event Approval(address indexed,address indexed,uint256)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMinted(address indexed,uint256)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function decimals() view returns (uint8)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function renounceOwnership()",
        "function symbol() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferOwnership(address)"
      ],
      "info": "ERC20Simple"
    },
    "WIOTA": {
      "address": "0xF9Aa61B9963D865B57aBBc1ed51771225811AcBa",
      "abi": [
        "constructor(string,string,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InvalidAddress()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event Approval(address indexed,address indexed,uint256)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMinted(address indexed,uint256)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function decimals() view returns (uint8)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function renounceOwnership()",
        "function symbol() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferOwnership(address)"
      ],
      "info": "ERC20Simple"
    },
    "WBTC": {
      "address": "0x38472E3ca4D26A63C3F20Af70A566a7D641B206D",
      "abi": [
        "constructor(string,string,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InvalidAddress()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event Approval(address indexed,address indexed,uint256)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMinted(address indexed,uint256)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function decimals() view returns (uint8)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function renounceOwnership()",
        "function symbol() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferOwnership(address)"
      ],
      "info": "ERC20Simple"
    },
    "WETH": {
      "address": "0xc5BA50B68D410BDdAf9e758567E3E5010d304815",
      "abi": [
        "constructor(string,string,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InvalidAddress()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event Approval(address indexed,address indexed,uint256)",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMinted(address indexed,uint256)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function decimals() view returns (uint8)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function renounceOwnership()",
        "function symbol() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferOwnership(address)"
      ],
      "info": "ERC20Simple"
    },
    "Arcanum": {
      "address": "0x71fa61C0f3d9C932756541C17BA79efaD42771ad",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Magic Wood": {
      "address": "0x4E7b577f4410b60418989417DA5C22756Bf1cEbc",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Simple Stone": {
      "address": "0xb5129602fd8C70390783De3360095aBFB4E70DC5",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Arcane Relics": {
      "address": "0xbc7aeA11F1d2014277B2c70D1f2ec5535807A0Bc",
      "abi": [
        "constructor(string,string,address,string)",
        "error ERC721EnumerableForbiddenBatchMint()",
        "error ERC721IncorrectOwner(address,uint256,address)",
        "error ERC721InsufficientApproval(address,uint256)",
        "error ERC721InvalidApprover(address)",
        "error ERC721InvalidOperator(address)",
        "error ERC721InvalidOwner(address)",
        "error ERC721InvalidReceiver(address)",
        "error ERC721InvalidSender(address)",
        "error ERC721NonexistentToken(uint256)",
        "error ERC721OutOfBoundsIndex(address,uint256)",
        "error EmptyParameter(uint256)",
        "error InvalidAddress()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256 indexed)",
        "event ApprovalForAll(address indexed,address indexed,bool)",
        "event Cancel(address indexed,uint256 indexed,bytes32,string)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event Redeem(address indexed,uint256 indexed,address indexed,bytes32,string)",
        "event RedemptionContractUpdated(address indexed)",
        "event Transfer(address indexed,address indexed,uint256 indexed)",
        "function IERC6672_ID() view returns (bytes4)",
        "function approve(address,uint256)",
        "function balanceOf(address) view returns (uint256)",
        "function batchMint(address,uint256)",
        "function cancel(bytes32,uint256,string)",
        "function getApproved(uint256) view returns (address)",
        "function getMemo(address,bytes32,uint256) view returns (string)",
        "function getRedemptionIds(address,uint256) view returns (bytes32[])",
        "function isApprovedForAll(address,address) view returns (bool)",
        "function isRedeemed(address,bytes32,uint256) view returns (bool)",
        "function mint(address)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function ownerOf(uint256) view returns (address)",
        "function redeem(bytes32,uint256,string)",
        "function redemptionContract() view returns (address)",
        "function renounceOwnership()",
        "function safeTransferFrom(address,address,uint256)",
        "function safeTransferFrom(address,address,uint256,bytes)",
        "function setApprovalForAll(address,bool)",
        "function setRedemptionContract(address)",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenByIndex(uint256) view returns (uint256)",
        "function tokenOfOwnerByIndex(address,uint256) view returns (uint256)",
        "function tokenURI(uint256) view returns (string)",
        "function totalSupply() view returns (uint256)",
        "function transferFrom(address,address,uint256)",
        "function transferOwnership(address)",
        "function withdraw()"
      ],
      "info": "ERC721Redeemable"
    },
    "Enchanted Iron": {
      "address": "0x932E9C7930feC11D4404Bf2b63220A4ba6aA6477",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Mystic Crystal": {
      "address": "0xB6C477EC1732b1dbeb3209cFb65584f34142B132",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Phantom Silk": {
      "address": "0x5880B9a15F48f564E57acaEF42297389D10bACB3",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Dragon Scale": {
      "address": "0x28E24CDDb9063D2e8Af3017DD11545B682CB6Ac6",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Elixir of Life": {
      "address": "0x8E06C39E3260d25D91b3F140463495c904829169",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Shadow Essence": {
      "address": "0xaD282397Bb5B876106FB32C382Cd947212b16C7E",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Sunstone": {
      "address": "0xD517bD8dAfF48a182C1143ce059b10548bC74d71",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Lunar Dust": {
      "address": "0xf1120dEB917A0eB20E2aCc47613d8E52D0041715",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Ancient Rune": {
      "address": "0x3450bed65af5B21a284a97C36644B8D76A0a7630",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    },
    "Spirit Feather": {
      "address": "0x720D2A5BcB654783A60109DE04dDdf7a70261c13",
      "abi": [
        "constructor(string,string,string,bool,bool,uint256)",
        "error AlreadyReleased()",
        "error ERC1363ApproveFailed(address,uint256)",
        "error ERC1363EOAReceiver(address)",
        "error ERC1363EOASpender(address)",
        "error ERC1363InvalidReceiver(address)",
        "error ERC1363InvalidSpender(address)",
        "error ERC1363TransferFailed(address,uint256)",
        "error ERC1363TransferFromFailed(address,address,uint256)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EmptyParameter(uint256)",
        "error ExceedsMaxSupply()",
        "error InconsistentReleasableState()",
        "error InvalidAddress()",
        "error NotReleasable()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "error UnauthorizedOperation()",
        "event Approval(address indexed,address indexed,uint256)",
        "event CoordinatorCapabilityUpdated(address indexed,uint8,bool)",
        "event EcoBoundReleased()",
        "event OwnershipTransferStarted(address indexed,address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event TokensMintedAndCalled(address indexed,uint256,bytes)",
        "event Transfer(address indexed,address indexed,uint256)",
        "function acceptOwnership()",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256) returns (bool)",
        "function approveAndCall(address,uint256,bytes) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function capabilitiesByCoordinator(address,uint8) view returns (bool)",
        "function decimals() view returns (uint8)",
        "function isEcoBound() view returns (bool)",
        "function isReleasable() view returns (bool)",
        "function maxSupply() view returns (uint256)",
        "function mint(address,uint256,bytes)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pendingOwner() view returns (address)",
        "function releaseEcoBound()",
        "function renounceOwnership()",
        "function supportsInterface(bytes4) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenURI() view returns (string)",
        "function totalMinted() view returns (uint256)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256) returns (bool)",
        "function transferAndCall(address,uint256,bytes) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferFromAndCall(address,address,uint256,bytes) returns (bool)",
        "function transferFromAndCall(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function updateCoordinatorCapability(address,uint8,bool)"
      ],
      "info": "ERC20EcoBound"
    }
  }
}